<launch>
  <!-- ROBOT MAPPING VERSION: use this with Gazebo simulation mapping -->
  <!-- WARNING : Database is automatically deleted on each startup -->
  <!--           See "delete_db_on_start" option below... -->

  <arg name="localization"      default="false"/>
  <arg name="rgbd_odometry"     default="false"/>
  <arg name="args"              default=""/>

  <!-- Choose visualization -->
  <arg name="rviz" default="true" />
  <arg name="rtabmapviz" default="false" /> 
  
  <param name="use_sim_time" type="bool" value="true"/>

  <!-- For Gazebo -->
  <include file="$(find rtabmap_ros)/launch/sim/turtlebot_world.launch" />

  <group ns="rtabmap">
    <!-- SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug" -->
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start">
	  <param name="frame_id" type="string" value="base_link"/>
	  <param name="wait_for_transform" type="bool" value="true"/>
	  <param name="odom_frame_id" type="string" value="odom"/>
	
	  <param name="subscribe_depth" type="bool" value="true"/>
	  <param name="subscribe_laserScan" type="bool" value="false"/>
	
	  <remap from="odom" to="odom"/>
	  <!-- remap from="scan" to="/jn0/base_scan"/ -->

	  <remap from="rgb/image" to="/camera/rgb/image_raw"/>
  	  <remap from="depth/image" to="/camera/depth/image_raw"/>
  	  <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>
  	
      <param name="rgb/image_transport" type="string" value="raw"/>
      <param name="depth/image_transport" type="string" value="raw"/>
	
	  <!-- RTAB-Map's parameters: do "rosrun rtabmap rtabmap (double-dash)params" to see the list of available parameters. -->
	  <param name="RGBD/PoseScanMatching" type="string" value="false"/>  <!-- Do odometry correction with consecutive laser scans -->
	  <param name="RGBD/LocalLoopDetectionSpace" type="string" value="true"/>  <!-- Local loop closure detection (using estimated position) with locations in WM -->
	  <param name="RGBD/LocalLoopDetectionTime" type="string" value="false"/>   <!-- Local loop closure detection with locations in STM -->
      <param name="RGBD/OptimizeFromGraphEnd"    type="string" value="false"/>  <!-- Set to false to generate map correction between /map and /odom -->
	  <param name="RGBD/AngularUpdate"           type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
	  <param name="RGBD/LinearUpdate"            type="string" value="0.1"/>    <!-- Update map only if the robot is moving -->
	  <param name="LccIcp/Type" type="string" value="1"/>                       <!-- 0=No ICP, 1=ICP 3D, 2=ICP 2D -->
	  <param name="LccBow/MaxDepth" type="string" value="0.0"/>                <!-- 3D visual words maximum depth 0=infinity -->
      <param name="LccBow/MinInliers" type="string" value="5"/>
	  <param name="LccBow/InlierDistance"        type="string" value="0.1"/>    <!-- 3D visual words correspondence distance -->
	  <param name="LccIcp2/CorrespondenceRatio"  type="string" value="0.05"/>
 	  <param name="Kp/MaxDepth"                  type="string" value="4.0"/>
	  <param name="Rtabmap/TimeThr"              type="string" value="700"/>
	  <param name="Mem/RehearsalSimilarity"      type="string" value="0.30"/> 
	  
	  <!-- localization mode -->
	  <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
	  <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
	  <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/> 
    </node>
    
    <!-- Visualisation RTAB-Map -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
  	  <param name="subscribe_depth" type="bool" value="true"/>
      <param name="subscribe_laserScan" type="bool" value="false"/>
      <param name="frame_id" type="string" value="map"/>
      <param name="wait_for_transform" type="bool" value="true"/>
	  <param name="odom_frame_id" type="string" value="odom"/>
    
      <remap from="rgb/image" to="/camera/rgb/image_raw"/>
      <remap from="depth/image" to="/camera/depth/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>
      <!-- remap from="scan" to="/jn0/base_scan"/ -->
      <remap from="odom" to="odom"/>
      
      <param name="rgb/image_transport" type="string" value="raw"/>
      <param name="depth/image_transport" type="string" value="raw"/>
    </node>
  </group>
  
  <!-- Visualization RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(find rtabmap_ros)/launch/sim/sim_robot_mapping.rviz"/>
  <node pkg="nodelet" type="nodelet" name="points_xyzrgb" args="standalone rtabmap_ros/point_cloud_xyzrgb">
   <remap from="rgb/image"       to="camera/rgb/image_raw"/>
   <remap from="depth/image"     to="camera/depth/image_raw"/>
   <remap from="rgb/camera_info" to="camera/rgb/camera_info"/>
   <remap from="cloud"           to="voxel_cloud" />
    
   <param name="rgb/image_transport" type="string" value="raw"/>
   <param name="depth/image_transport" type="string" value="raw"/>
    
   <param name="queue_size" type="int" value="10"/>
   <param name="voxel_size" type="double" value="0.01"/>
  </node>

  <!-- turtlebot_teleop_key already has its own built in velocity smoother>
  <node pkg="turtlebot_teleop" type="turtlebot_teleop_key" name="turtlebot_teleop_keyboard" output="log">
    <param name="scale_linear" value="0.5" type="double"/>
    <param name="scale_angular" value="1.5" type="double"/>
    <remap from="turtlebot_teleop_keyboard/cmd_vel" to="cmd_vel_mux/input/teleop"/>
  </node -->

</launch>
